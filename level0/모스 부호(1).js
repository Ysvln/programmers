/*
모스부호 (1)

문제 설명

머쓱이는 친구에게 모스부호를 이용한 편지를 받았습니다. 
그냥은 읽을 수 없어 이를 해독하는 프로그램을 만들려고 합니다. 
문자열 letter가 매개변수로 주어질 때, letter를 영어 소문자로 바꾼 문자열을 return 하도록 solution 함수를 완성해보세요.
모스부호는 다음과 같습니다.

morse = { 
    '.-':'a','-...':'b','-.-.':'c','-..':'d','.':'e','..-.':'f',
    '--.':'g','....':'h','..':'i','.---':'j','-.-':'k','.-..':'l',
    '--':'m','-.':'n','---':'o','.--.':'p','--.-':'q','.-.':'r',
    '...':'s','-':'t','..-':'u','...-':'v','.--':'w','-..-':'x',
    '-.--':'y','--..':'z'
}
*/

function solution(letter) {
  morse = {
    ".-": "a",
    "-...": "b",
    "-.-.": "c",
    "-..": "d",
    ".": "e",
    "..-.": "f",
    "--.": "g",
    "....": "h",
    "..": "i",
    ".---": "j",
    "-.-": "k",
    ".-..": "l",
    "--": "m",
    "-.": "n",
    "---": "o",
    ".--.": "p",
    "--.-": "q",
    ".-.": "r",
    "...": "s",
    "-": "t",
    "..-": "u",
    "...-": "v",
    ".--": "w",
    "-..-": "x",
    "-.--": "y",
    "--..": "z",
  };

  // map 과 filter 차이 ==> map 에서는 morse의 value 값을 반환하고,  filter는 조건에 해당하는 요소, arr 배열의 값을 반환한다.
  // map은 요소를 변경하고 filter는 true, false를 반환

  console.log(
    letter
      .split(" ")
      .map((el) => morse[el])
      .join("")
  );

  //     let arr = letter.split(" ").map(el -> morse[el]);
  //     console.log(arr);
  //     console.log(arr.filter((el) => morse[el]));

  //     return arr.join('');

  return letter
    .split(" ")
    .map((el) => morse[el])
    .join("");
}
